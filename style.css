/* ========================================
   基本トークン
======================================== */
:root {
  --primary-red:#FF6B6B;
  --sky-blue:#4ECDC4;
  --warm-yellow:#FFE66D;
  --vibrant-orange:#FF8E53;
  --coral-pink:#FF9999;
  --warm-white:#FFFEF7;
  --shadow-soft:0 10px 25px rgba(0,0,0,0.15);
  --shadow-strong:0 20px 40px rgba(0,0,0,0.25);
  --ease-out:cubic-bezier(0.34,1.56,0.64,1);
  --ease-smooth:cubic-bezier(.4,0,.2,1);
}

/* ========================================
   ベース
======================================== */
* { box-sizing:border-box; margin:0; padding:0; }
body {
  font-family:"Hiragino Sans","Yu Gothic",sans-serif;
  color:#333;
  min-height:100vh;
  overflow:hidden;
  background:
    radial-gradient(circle at 20% 30%, rgba(255,107,107,.30) 0%, transparent 50%),
    radial-gradient(circle at 80% 60%, rgba(78,205,196,.30) 0%, transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(255,230,109,.30) 0%, transparent 50%),
    radial-gradient(circle at 70% 20%, rgba(255,142,83,.30) 0%, transparent 50%),
    linear-gradient(135deg,#fff9f0 0%,#fff5f5 100%);
  animation:bgShift 20s ease-in-out infinite alternate;
  perspective:1600px;
}
body.preload * { animation-play-state:paused !important; }

/* スクロールが無い前提でメイン中央表示 */
.floating-stage-wrapper {
  position:relative;
  width:100%;
  height:calc(100vh - 80px);
  top:0;
  display:flex;
  align-items:center;
  justify-content:center;
  overflow:hidden;
  padding-top:0;
}

/* ========================================
   ヘッダー
======================================== */
.tgs-mini-header {
  height:80px;
  display:flex;
  align-items:center;
  justify-content:center;
  backdrop-filter:blur(6px);
  background:rgba(255,255,255,0.55);
  box-shadow:0 4px 12px rgba(0,0,0,0.08);
  position:relative;
  z-index:50;
}
.header-inner { text-align:center; }
.tgs-title {
  font-size:2.1rem;
  font-weight:700;
  letter-spacing:.5px;
  color:var(--primary-red);
  opacity:0;
  animation:fadeDown .8s var(--ease-smooth) .3s forwards;
}
.tgs-subtitle {
  font-size:1.3rem;
  font-weight:600;
  color:var(--sky-blue);
  opacity:0;
  animation:fadeDown .6s var(--ease-smooth) .6s forwards;
}

/* ========================================
   浮遊ステージ
======================================== */
.floating-stage {
  position:relative;
  width:100%;
  height:600px;
  max-width:1200px;
  pointer-events:none;
}

.floating-item {
  position:absolute;
  top:50%; left:50%;
  transform-origin:center;
  opacity:0;
  transform:scale(.3) translateY(50px);
  animation:materialAppear 1.2s var(--ease-out) forwards;
  filter:drop-shadow(0 10px 25px rgba(0,0,0,.15));
  transition:filter .3s var(--ease-smooth), transform .3s var(--ease-smooth);
}

.floating-item img {
  width:100%; height:100%; object-fit:contain; display:block;
  user-select:none; pointer-events:auto;
}

/* サイズバリエーション */
.floating-item-xl { width:320px; height:240px; z-index:15; }
.floating-item-l  { width:280px; height:210px; z-index:12; }
.floating-item-m  { width:240px; height:180px; z-index:10; }
.floating-item-s  { width:200px; height:150px; z-index:8;  }

/* 座標（中心 0,0 基準） */
.pos-1 { transform:translate(-280px,-180px); }
.pos-2 { transform:translate(200px,-220px); }
.pos-3 { transform:translate(-350px,-50px); }
.pos-4 { transform:translate(250px,-80px); }
.pos-5 { transform:translate(0px,0px); }
.pos-6 { transform:translate(-200px,120px); }
.pos-7 { transform:translate(300px,100px); }
.pos-8 { transform:translate(50px,180px); }

/* appear 後に再度基準調整：materialAppear が transform を使用するため
   初期配置 → appear完了後 JS で base-pos クラスに差し替える方式でも可
   簡易には: animation 内で最終 transform: scale(1) translate(0) を適用しない代替として
   wrapper(=floating-item) は座標のみ、拡大縮小は animation 内で scale のみ扱う */
@keyframes materialAppear {
  0% { opacity:0; transform:scale(.3) translateY(50px); }
  70% { opacity:1; transform:scale(1.05) translateY(-5px); }
  100% { opacity:1; transform:scale(1) translateY(0); }
}

/* 遅延割当 */
.delay-1 { animation-delay:.5s; }
.delay-2 { animation-delay:.8s; }
.delay-3 { animation-delay:1.1s; }
.delay-4 { animation-delay:1.4s; }
.delay-5 { animation-delay:1.7s; }
.delay-6 { animation-delay:2.0s; }
.delay-7 { animation-delay:2.3s; }
.delay-8 { animation-delay:2.6s; }

/* 浮遊アニメは内側要素に適用し transform 競合回避 */
.float-anim {
  width:100%; height:100%;
  animation-play-state:running;
  will-change:transform;
}
.float-pattern-1 { animation:floatDrift1 8s ease-in-out infinite; }
.float-pattern-2 { animation:floatDrift2 12s ease-in-out infinite; }
.float-pattern-3 { animation:floatDrift3 10s ease-in-out infinite; }

/* 個別漂流 */
@keyframes floatDrift1 {
  0%,100% { transform:translate(0,0) rotate(0deg); }
  25% { transform:translate(8px,-15px) rotate(2deg); }
  50% { transform:translate(-5px,-8px) rotate(-1deg); }
  75% { transform:translate(12px,-20px) rotate(3deg); }
}
@keyframes floatDrift2 {
  0%,100% { transform:translate(0,0) rotate(0deg); }
  33% { transform:translate(-8px,-12px) rotate(-2deg); }
  66% { transform:translate(10px,-18px) rotate(1.5deg); }
}
@keyframes floatDrift3 {
  0%,100% { transform:translate(0,0) rotate(0deg); }
  20% { transform:translate(6px,-10px) rotate(1deg); }
  40% { transform:translate(-4px,-5px) rotate(-.5deg); }
  60% { transform:translate(9px,-15px) rotate(2deg); }
  80% { transform:translate(-7px,-8px) rotate(-1.5deg); }
}

/* ホバー（内側停止 + 立体感） */
.floating-item:hover { filter:drop-shadow(0 20px 40px rgba(0,0,0,.25)); transform:scale(1.1); }
.floating-item:hover .float-anim { animation-play-state:paused; }

/* 小サイズ背景ぼかしアクセント */
.floating-item-s::before {
  content:"";
  position:absolute; inset:0;
  backdrop-filter:blur(.5px);
  z-index:-1;
}

/* ========================================
   QR
======================================== */
.qr-fixed {
  position:fixed;
  right:24px;
  bottom:24px;
  z-index:120;
}
.qr-card {
  width:160px; height:180px;
  background:rgba(255,255,255,.75);
  border-radius:16px;
  padding:14px 12px 10px;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:flex-start;
  gap:4px;
  box-shadow:var(--shadow-soft);
  animation:qrPulse 2.4s ease-in-out 3s infinite;
  transition:background .3s var(--ease-smooth), transform .3s var(--ease-smooth);
  backdrop-filter:blur(6px);
}
.qr-card:hover {
  background:rgba(255,255,255,.92);
  animation-duration:.9s;
  transform:translateY(-4px);
  box-shadow:var(--shadow-strong);
}
.qr-img { width:100px; height:100px; }
.qr-img img { width:100%; height:100%; object-fit:contain; }
.qr-main {
  font-size:.95rem; font-weight:600; text-align:center;
  color:var(--primary-red); line-height:1.2;
}
.qr-sub {
  font-size:.75rem; text-align:center;
  color:var(--vibrant-orange);
}

@keyframes qrPulse {
  0%,100% { transform:scale(1); }
  50% { transform:scale(1.05); }
}

/* ========================================
   補助アニメ
======================================== */
@keyframes fadeDown {
  0% { opacity:0; transform:translateY(-30px); }
  100% { opacity:1; transform:translateY(0); }
}

@keyframes bgShift {
  0% { background-position:0% 50%; }
  50% { background-position:100% 50%; }
  100% { background-position:0% 50%; }
}

/* ========================================
   レスポンシブ
======================================== */
@media (max-width:1200px) {
  .floating-stage { transform:scale(.9); }
}
@media (max-width:1024px) {
  .floating-stage { transform:scale(.8); }
  .floating-item-xl { width:280px; height:210px; }
  .floating-item-l  { width:240px; height:180px; }
}
@media (max-width:900px) {
  body { overflow:auto; }
  .floating-stage-wrapper {
    height:auto;
    min-height:calc(100vh - 80px);
    padding:60px 0 160px;
  }
  .floating-stage {
    height:640px;
    transform:scale(.75);
  }
}
@media (max-width:768px) {
  .tgs-mini-header { height:72px; }
  .tgs-title { font-size:1.55rem; }
  .tgs-subtitle { font-size:1.05rem; }
  .floating-stage { transform:scale(.62); height:560px; }
  .qr-card { width:130px; height:155px; }
  .qr-img { width:86px; height:86px; }
  .qr-main { font-size:.85rem; }
  .qr-sub { font-size:.65rem; }
}
@media (max-width:520px) {
  .floating-stage { transform:scale(.52); }
  .qr-fixed { right:14px; bottom:14px; }
}
@media (prefers-reduced-motion:reduce) {
  * { animation-duration:.01ms !important; animation-iteration-count:1 !important; transition:none !important; }
}